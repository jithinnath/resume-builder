/* You can add global styles to this file, and also import other style files */
// @import "../node_modules/bootstrap/scss/bootstrap";
// @import url("../node_modules/bootstrap-sass/assets/stylesheets/_bootstrap.scss");

@use '@angular/material' as mat;
@use 'colors';

$my-primary: colors.$my-primary;
// mat.define-palette(mat.$cyan-palette);
$my-accent: colors.$my-accent;
// mat.define-palette(mat.$yellow-palette);
$my-warn: colors.$my-warn;
//mat.define-palette(mat.$red-palette);
// Define a dark theme
$dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $my-primary,
      accent: $my-accent,
      warn: $my-warn,
    ),
    // Only include `typography` and `density` in the default dark theme.
    typography:
      mat.define-typography-config(
        $font-family: 'Poppins',
      ),
    density: 0,
  )
);

// Define a light theme
$light-theme: mat.define-light-theme(
  (
    color: (
      primary: mat.define-palette(mat.$indigo-palette, 500),
      accent: mat.define-palette(mat.$pink-palette, A200, A100, A400),
    ),
  )
);

// Apply the dark theme by default
// Emit theme-dependent styles for common features used across multiple components.
@include mat.core-theme($dark-theme);
// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
@include mat.button-theme($dark-theme);
// @include mat.all-component-colors($dark-theme);
@include mat.all-component-themes($dark-theme);

// Apply the light theme only when the user prefers light themes.
@media (prefers-color-scheme: light) {
  // Use the `-color` mixins to only apply color styles without reapplying the same
  // typography and density styles.
  @include mat.core-color($light-theme);
  @include mat.button-color($light-theme);
}

// @use '@angular/material' as mat;

// @import "@angular/material/theming";

// @include mat.core();

// $angular-primary: mat.define-palette(mat.$teal-palette, 500, 100, 900);
// $angular-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// $angular-warn: mat.define-palette(mat.$red-palette);

// $angular-default-theme: mat.define-light-theme(
//   (
//     color: (
//       primary: $angular-primary,
//       accent: $angular-accent,
//       warn: $angular-warn,
//     ),
//   )
// );

// // // Define a dark theme
// $dark-theme: mat.define-dark-theme((
//  color: (
//    primary: mat.define-palette(mat.$pink-palette),
//    accent: mat.define-palette(mat.$blue-grey-palette),
//  ),
//   // Only include `typography` and `density` in the default dark theme.
//   typography: mat.define-typography-config(),
//   density: 0,
// ));
// // $angular-dark-theme: mat.define-dark-theme(
// //   (
// //     color: (
// //       primary: $angular-primary,
// //       accent: $angular-accent,
// //       warn: $angular-warn,
// //     ),
// //   )
// // );

// // @include mat.all-component-themes($angular-default-theme);
// @include mat.all-component-colors($dark-theme);

// .darkMode {
//   @include mat.all-component-colors($angular-dark-theme);
// }

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: 'Poppins';
}
.padding-16 {
  padding: 16px;
}

mat-card {
  box-shadow: none !important;
  border: 1px solid #ffff !important;
  border-radius: 4px 4px 0 0 !important;
}

mat-card-header {
  // background-color: mat.get-color-from-palette($my-primary, 'darker');
  background-color: colors.$card-header-bg;
  // border: 1px solid colors.$primary;
  // border-radius: 4px 4px 0 0;
  // border-bottom-width: 0;
  // border-bottom-color: colors.$accent;
}
mat-card-content {
  // border: 1px solid colors.$primary;
  // border-radius: 0 0 4px 4px;
  // border-top-width: 0;

  mat-accordion {
    mat-expansion-panel {
      box-shadow: none !important;
    }
  }
}

mat-card {
  background: red;
}

mat-expansion-panel {
  box-shadow: none;
}

a{
  color: mat.get-color-from-palette($my-primary, 'lighter');
}
